import java.nio.file.Paths
import java.util.regex.Matcher
import java.util.regex.Pattern

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id "com.google.protobuf"
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.19.4'
    }
    generateProtoTasks {
        all().forEach {
            it.builtins {
                java {
                    option "lite"
                }
            }
        }
    }
}

class UpdateProtoAction implements Action {
    String projectDir
    String sdkDirectory
    String compileSdk;

    UpdateProtoAction(String projectDir, String sdkDirectory, String compileSdk) {
        this.projectDir = projectDir
        this.sdkDirectory = sdkDirectory
        this.compileSdk = compileSdk
    }
    
    
    @Override
    void execute(Object o) {
        File protoFile = Paths.get(projectDir, "src", "main", "proto", "GUIProt0.proto").toFile()
        File keyEventFile = Paths.get(sdkDirectory, "sources", "android-"+ compileSdk, "android", "view", "KeyEvent.java").toFile()
        String[] lines = keyEventFile.readLines()
        String codes = lines.findAll {
            it.stripLeading().startsWith("public static final int KEYCODE_")
        }.collect {
            String middle = it.split("int")[1].stripLeading().split(";")[0]
            middle.split("=").join(" = ") + ";"
        }.join("\n")
        String proto = protoFile.getText("UTF-8")
        Pattern keyEnum = Pattern.compile("enum KeyCode \\{([^{)]*)}")
        Matcher m = keyEnum.matcher(proto)
        if (m.find()) {
            if (m.group(1).strip() == codes) {
                println("KeyCode enum up-to-date")
            } else {
                protoFile.write(m.replaceFirst("enum KeyCode {\n" + codes + "\n}"))
                println("KeyCode enum updated")
            }
        } else {
            throw RuntimeException("Could not find KeyCode enum in GUIProt0.proto")
        }
    }
}

tasks.register("gen-proto-keycodes") {
    actions.push(new UpdateProtoAction(projectDir.path, android.sdkDirectory.path, android.compileSdk.toString()))
}

tasks.register("ensure-sources", Exec.class) {
    it.commandLine(Paths.get(android.sdkDirectory.path, "cmdline-tools", "latest", "bin", "sdkmanager").toString(), "sources;android-" + android.compileSdk.toString())
}

tasks.preBuild {
    dependsOn("gen-proto-keycodes", "ensure-sources")
}

android {
    compileSdk 33
    defaultConfig {
        applicationId "com.termux.gui"
        minSdk 24
        targetSdk 33
        versionCode 8
        versionName "1.0.0"
        externalNativeBuild {
            cmake {
                arguments ''
            }
        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        debug {
            storeFile file('dev_keystore.jks')
            keyAlias 'alias'
            storePassword 'xrj45yWGLbsO7W0v'
            keyPassword 'xrj45yWGLbsO7W0v'
        }
    }
    packagingOptions {
        jniLibs {
            keepDebugSymbols += ['**/*.so']
        }
    }


    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            minifyEnabled false
        }
        debugMinify {
            debuggable true
            signingConfig signingConfigs.debug
            minifyEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding true
    }
    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
        }
    }
    ndkVersion '23.1.7779620'
    namespace 'com.termux.gui'
}

dependencies {
    implementation 'com.google.code.gson:gson:2.9.1'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'androidx.activity:activity-ktx:1.5.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'

    implementation "androidx.security:security-crypto:1.1.0-alpha03"
    
    implementation "com.google.protobuf:protobuf-javalite:3.19.4"
    
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation project(path: ':hbuffers')
    
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}